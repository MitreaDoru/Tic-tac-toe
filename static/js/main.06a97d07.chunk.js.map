{"version":3,"sources":["Components/Square.js","User/checkPlayer.js","User/markedTable.js","Components/Button.js","Components/Table.js","App.js","index.js","Components/Table.module.css","Components/Square.module.css","Components/Button.module.css"],"names":["Square","value","onClick","className","styled","square","checkPlayer","player","turn","checkTurn","table","checkWinner","winner","forEach","line","a","b","c","markedTable","updatedTable","map","val","index","Button","button","Table","useState","Array","fill","setTable","setPlayer","setTurn","markSquare","board","_","indx","row","max","current","App","ReactDOM","createRoot","document","getElementById","render","module","exports"],"mappings":"0MASeA,EANA,SAAH,GAA4B,IAAtBC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QACrB,OACI,qBAAKC,UAAWC,IAAOC,OAAQH,QAASA,EAAQ,SAAED,GAE1D,E,gBCoCeK,EANK,CAChBC,OAtCW,SAACC,GACZ,OAAIA,EAAO,IAAM,EACN,IAEA,GAEf,EAiCIC,UATc,SAACD,EAAME,EAAOL,GAC5B,MAAsB,KAAlBK,EAAML,GACCG,EAAO,EAEPA,CAEf,EAIIG,YAhCgB,SAACD,GACjB,IAUIE,EAQJ,MAlBc,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGLC,SAAQ,SAAAC,GACV,kBAAkBA,EAAI,GAAfC,EAAC,KAAEC,EAAC,KAAEC,EAAC,KAId,OAHIP,EAAMK,IAAML,EAAMK,KAAOL,EAAMM,IAAMN,EAAMK,KAAOL,EAAMO,KACxDL,EAASF,EAAMK,IAEZ,IACX,IACOH,CACX,GCdeM,EAJK,CAChBC,aAXiB,SAACT,EAAOL,EAAQE,GAOjC,OANiBG,EAAMU,KAAI,SAACC,EAAKC,GAC7B,OAAIjB,IAAWiB,GAAiB,KAARD,EACbd,EAEJc,CACX,GAEJ,G,gBCAeE,EANA,SAAH,GAA4B,IAAtBrB,EAAO,EAAPA,QAASD,EAAK,EAALA,MACvB,OACI,wBAAQC,QAASA,EAASC,UAAWC,IAAOoB,OAAO,SAAEvB,GAE7D,ECsDewB,EArDD,WACV,MAA0BC,mBAASC,MAAM,GAAGC,KAAK,KAAI,mBAA9ClB,EAAK,KAAEmB,EAAQ,KACtB,EAA4BH,mBAAS,KAAI,mBAAlCnB,EAAM,KAAEuB,EAAS,KACxB,EAAwBJ,mBAAS,GAAE,mBAA5BlB,EAAI,KAAEuB,EAAO,KAEdC,EAAa,SAAC3B,GACM,KAAlBK,EAAML,IAAmBO,IACzBkB,EAAUxB,EAAYC,OAAOC,IAC7BqB,EAASX,EAAYC,aAAaT,EAAOL,EAAQE,IACjDwB,EAAQzB,EAAYG,UAAUD,EAAME,EAAOL,IAEnD,EAgBMO,EAASN,EAAYK,YAAYD,GACjCuB,EAAQvB,EAAMU,KAAI,SAACc,EAAGC,GAExB,GAAa,IAATA,GAAuB,IAATA,GAAuB,IAATA,EAC5B,OAAQ,sBAAgBhC,UAAWC,IAAOgC,IAAI,UAC1C,cAAC,EAAM,CAACnC,MAAOS,EAAMyB,GAAOjC,QAAS,WAAQ8B,EAAWG,EAAM,IAC9D,cAAC,EAAM,CAAClC,MAAOS,EAAMyB,EAAO,GAAIjC,QAAS,WAAQ8B,EAAWG,EAAO,EAAG,IACtE,cAAC,EAAM,CAAClC,MAAOS,EAAMyB,EAAO,GAAIjC,QAAS,WAAQ8B,EAAWG,EAAO,EAAG,MAHxDA,EAO1B,IACA,OACI,sBAAKhC,UAAWC,IAAOiC,IAAI,UACvB,sBAAKlC,UAAWC,IAAOkC,QAAQ,UAC1B1B,EAAS,0CAAaA,KAAe,6CAAgBL,KACtD,cAAC,EAAM,CAACL,QA9BA,WAChB2B,EAASF,MAAM,GAAGC,KAAK,KACvBG,EAAQ,GACRD,EAAU,IACd,EA0B0C7B,MAAM,UACpC,cAAC,EAAM,CAACC,QA1BO,WACR,MAAXK,GACAuB,EAAU,KACVC,EAAQ,KAERD,EAAU,KACVC,EAAQ,GAEhB,EAkBiD9B,MAAM,cAE/C,qBAAKE,UAAWC,IAAO6B,MAAM,SACxBA,MAIjB,EC/CeM,EARH,WACV,OACE,qBAAKpC,UAAU,MAAK,SAClB,cAAC,EAAK,KAGZ,ECHaqC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,aAAU,UAAC,cAAC,EAAG,M,oBCN5BC,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,IAAM,mBAAmB,QAAU,uBAAuB,IAAM,mB,wCCA/GD,EAAOC,QAAU,CAAC,OAAS,uB,oBCA3BD,EAAOC,QAAU,CAAC,OAAS,uB","file":"static/js/main.06a97d07.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from './Square.module.css'\r\n\r\nconst Square = ({ value, onClick }) => {\r\n    return (\r\n        <div className={styled.square} onClick={onClick}>{value}</div>\r\n    )\r\n}\r\n\r\nexport default Square","const player = (turn) => {\r\n    if (turn % 2 !== 0) {\r\n        return 'X'\r\n    } else {\r\n        return 'O'\r\n    }\r\n}\r\n\r\nconst checkWinner = (table) => {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    let winner;\r\n    lines.forEach(line => {\r\n        const [a, b, c] = line\r\n        if (table[a] && table[a] === table[b] && table[a] === table[c]) {\r\n            winner = table[a]\r\n        }\r\n        return null\r\n    })\r\n    return winner\r\n}\r\n\r\nconst checkTurn = (turn, table, square) => {\r\n    if (table[square] === '') {\r\n        return turn + 1\r\n    } else {\r\n        return turn\r\n    }\r\n}\r\nconst checkPlayer = {\r\n    player,\r\n    checkTurn,\r\n    checkWinner,\r\n}\r\n\r\nexport default checkPlayer","const updatedTable = (table, square, player) => {\r\n    const newTable = table.map((val, index) => {\r\n        if (square === index && val === '') {\r\n            return player\r\n        }\r\n        return val\r\n    })\r\n    return newTable\r\n}\r\n\r\nconst markedTable = {\r\n    updatedTable\r\n}\r\n\r\nexport default markedTable","import styled from './Button.module.css'\r\n\r\nconst Button = ({ onClick, value }) => {\r\n    return (\r\n        <button onClick={onClick} className={styled.button}>{value}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import Square from \"./Square\"\r\nimport { useState } from \"react\"\r\nimport styled from './Table.module.css'\r\nimport checkPlayer from \"../User/checkPlayer\"\r\nimport markedTable from \"../User/markedTable\"\r\nimport React from \"react\"\r\nimport Button from \"./Button\"\r\nconst Table = () => {\r\n    const [table, setTable] = useState(Array(9).fill(''))\r\n    const [player, setPlayer] = useState('X')\r\n    const [turn, setTurn] = useState(0)\r\n\r\n    const markSquare = (square) => {\r\n        if (table[square] === '' && !winner) {\r\n            setPlayer(checkPlayer.player(turn))\r\n            setTable(markedTable.updatedTable(table, square, player))\r\n            setTurn(checkPlayer.checkTurn(turn, table, square))\r\n        }\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setTable(Array(9).fill(''))\r\n        setTurn(0)\r\n        setPlayer('X')\r\n    }\r\n    const handleChangePlayer = () => {\r\n        if (player === 'X') {\r\n            setPlayer('O')\r\n            setTurn(1)\r\n        } else {\r\n            setPlayer('X')\r\n            setTurn(0)\r\n        }\r\n    }\r\n    const winner = checkPlayer.checkWinner(table)\r\n    const board = table.map((_, indx) => {\r\n\r\n        if (indx === 0 || indx === 3 || indx === 6) {\r\n            return (<div key={indx} className={styled.row}>\r\n                <Square value={table[indx]} onClick={() => { markSquare(indx) }} />\r\n                <Square value={table[indx + 1]} onClick={() => { markSquare(indx + 1) }} />\r\n                <Square value={table[indx + 2]} onClick={() => { markSquare(indx + 2) }} />\r\n            </div>)\r\n        }\r\n        return undefined\r\n    })\r\n    return (\r\n        <div className={styled.max}>\r\n            <div className={styled.current}>\r\n                {winner ? <h2>Winner: {winner}</h2> : <h2>Next turn: {player}</h2>}\r\n                <Button onClick={handleReset} value='Reset' />\r\n                <Button onClick={handleChangePlayer} value='Change' />\r\n            </div>\r\n            <div className={styled.board}>\r\n                {board}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table","import \"./index.css\";\nimport Table from \"./Components/Table\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Table />\n    </div>\n  )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\nimport { StrictMode } from 'react';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<StrictMode><App /></StrictMode>);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Table_board__gvu3M\",\"row\":\"Table_row__3w88S\",\"current\":\"Table_current__CnIXr\",\"max\":\"Table_max__1cQGv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Square_square__1JHmp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3HdYY\"};"],"sourceRoot":""}